@model PagedList.IPagedList<PayrollSystem.Models.JobOrderModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
     ViewBag.Title = ViewBag.Action;
}
<h3 class="text-default jo_title">@ViewBag.Action</h3>
<div class="box-tools pull-right">
     <span><i class="glyphicon glyphicon-user"></i></span>
</div>
<div class="box box box-default">
     <div class="navbar-form">
          <div class="input-group add-on">
               <input class="form-control" placeholder="Search" name="search" value="@ViewBag.Search" id="search_value" type="text">
               <div class="input-group-btn">
                    <button class="btn btn-default jo_search" type="button"><i class="glyphicon glyphicon-search"></i></button>
               </div>
          </div>
     </div>
     <div class="box-body jo-employee-list">
     </div>
</div>

<div class="row">
     <div class="col-md-6">
          <!--RENDER CREATE PAYROLL PARTIAL -->
          <div class="box box box-default hide" id="box_create_payroll">
               <div class="box-header with-border">
                    <h1 class="box-title"><b>Create Payroll</b></h1>
                    <div class="box-tools pull-right">
                         <button class="btn btn-xs btn-danger remove_create_jo_payroll"><i class="glyphicon glyphicon-remove"></i></button>
                    </div>
               </div>
               @Html.Partial("Partial/_JoFormPartial")
          </div>

     </div>
     <div class="col-md-6">
          <div class="box box box-default hide" id="box_jo_payroll_list">
               <div class="box-header with-border">
                    <h1 class="box-title"><b>Payroll List</b></h1>
                    <div class="box-tools pull-right">
                         <button class="btn btn-xs btn-danger remove_payroll_list"><i class="glyphicon glyphicon-remove"></i></button>
                    </div>
               </div>
               <div class="box-body">
                    <div class="parent-payroll-list">

                    </div>
               </div>
          </div>
     </div>
</div>
<script>

    $(document).ready(function () {

        loadJoEmployee(getPageId(), 1, "");

        $(".jo_search").click(function () {
            var search_value = $("#search_value").val();
            var title = $(".jo_title").text();
            switch (title) {
                case "Job Order - ATM CARD":
                    loadJoEmployee(0, 1, search_value);
                    break;
                case "Job Order - CASH CARD":
                    loadJoEmployee(1, 1, search_value);
                    break;
                case "Job Order - W/O LBP CARD":
                    loadJoEmployee(2, 1, search_value);
                    break;
                case "Job Order - UNDER VTF":
                    loadJoEmployee(3, 1, search_value);
                    break;
            }
        });

        $("#jo_working_days, #jo_minutes_late").change(function () {
            ComputeDeductions();
        });

        $("#jo_ewt,#jo_prof_tax,#jo_coop,#jo_other_adjustment,#jo_pagibig,#jo_phic,#jo_gsis,#jo_excess,#jo_adjustment").change(function () {
            $(this).val(formatComma(roundOff($(this).val())));
            ComputeDeductions();
            ComputeTotalNetPay();
        });

        $("#jo_save").click(function () {
            setLoansReadOnly(true);
            var choosen_month = $("#jo_month").val();
            var choosen_year = $("#jo_year").val();
            if (choosen_month <= 9) choosen_month = "0" + choosen_month;
            var choosen_options = $("#jo_month_range").val();

            if (choosen_month === "00" && choosen_year === "0" && choosen_options === "0") {
                alert("Please specify the dates");
                return;
            }

            var id = $("#jo_payroll_id").val();
            var jo_id = $("#jo_id").val();
            var fullname = $("#jo_name").val();
            var start_date = $("#jo_date_range").val().split('-')[0];
            var end_date = $("#jo_date_range").val().split('-')[1];
            var adjustment = $("#jo_adjustment").val();
            var working_days = $("#jo_working_days").val();
            var absent_date_list = $("#jo_absent_date_list").val();
            var salary = $("#jo_salary").val();
            var minutes_late = $("#jo_minutes_late").val();
            var prof_tax = $("#jo_prof_tax").val();
            var jo_ewt = $("#jo_ewt").val();
            var coop = $("#jo_coop").val();
            var other_adjustment = $("#jo_other_adjustment").val();
            var pagibig = $("#jo_pagibig").val();
            var excess = $("#jo_excess").val();
            var phic = $("#jo_phic").val();
            var gsis = $("#jo_gsis").val();
            var remarks = $("#jo_remarks").val();

            var type = $("#jo_save").text();

            var url = "@Url.Action("InsertJoPayroll", "Home")";
            $.ajax({
                url: url,
                type: "POST",
                data: {
                    id: id,
                    jo_id: jo_id,
                    start_date: start_date,
                    end_date: end_date,
                    adjustment: removeComma(adjustment),
                    working_days: working_days,
                    absent_date_list: absent_date_list,
                    salary: removeComma(salary),
                    minutes_late: minutes_late,
                    prof_tax: removeComma(prof_tax),
                    jo_ewt: removeComma(jo_ewt),
                    coop: removeComma(coop),
                    other_adjustment: removeComma(other_adjustment),
                    pagibig: removeComma(pagibig),
                    excess: removeComma(excess),
                    phic: removeComma(phic),
                    gsis: removeComma(gsis),
                    remarks: remarks,
                    type:type
                },
                success: function (flag) {
                     var message = "New payroll added"
                     if ($("#jo_save").text() == "Update") {
                          message = "Payroll updated";
                     }
                    $.toast({
                        heading: 'Success',
                        text: message,
                        icon: 'success'
                    });
                    clearJoForm();
                    var firstname = fullname.split(" ")[0];
                    var middlename = fullname.split(" ")[1];
                    var lastname = fullname.split(" ")[2];
                    loadJoPayrollList(1,jo_id, firstname, lastname, middlename);
                  //  alert(flag);
                }
            });

        });


        $("#edit_coop,#edit_pagibig,#edit_phic,#edit_gsis,#edit_excess").click(function () {

            var type = $(this).val();

            var icon = $("#" + type + "_icon");

            if (icon.hasClass("glyphicon-pencil")) {

                $("#jo_" + type + "").attr("readonly", false);
                $("#jo_" + type + "_payment").attr("readonly", false);
                $("#jo_" + type + "_paid").attr("readonly", false);

                $("#" + type + "_icon").removeClass("glyphicon-pencil");
                $("#" + type + "_icon").addClass("glyphicon-check");
                return;

            }

            if (icon.hasClass("glyphicon-check") || icon.hasClass("glyphicon-repeat")) {

                var url = "@Url.Action("UpdateRemittance", "Home")";
                var amount = $("#jo_" + type + "").val().replace(/,/g, '');
                var payment = $("#jo_" + type + "_payment").val().replace(/,/g, '');
                var paid = $("#jo_" + type + "_paid").val().replace(/,/g, '');
                var emp_id = $("#jo_id").val();

                $("#" + type + "_icon").removeClass("glyphicon-check");
                $("#" + type + "_icon").removeClass("glyphicon-repeat");
                $("#" + type + "_icon").addClass("fa fa-spinner fa-spin");

                $.ajax({
                    url: url,
                    type: "POST",
                    data: {
                        table: type+"_remittance",
                        ID: 1,
                        UserID: emp_id,
                        MaxCount: payment,
                        Count: paid,
                        Amount:amount
                    },
                    success: function (flag) {
                        if (flag) {
                            $.toast({
                                heading: 'Success',
                                text: type.toUpperCase()+' updated successfully',
                                icon: 'success'
                            });

                            $("#jo_" + type + "").attr("readonly", true);
                            $("#jo_" + type + "_payment").attr("readonly", true);
                            $("#jo_" + type + "_paid").attr("readonly", true);

                            $("#edit_" + type + "").removeClass("btn-danger");
                            $("#edit_" + type + "").addClass("btn-success");

                            $("#" + type + "_icon").removeClass("fa fa-spinner fa-spin");
                            $("#" + type + "_icon").addClass("glyphicon-pencil");
                        } else {
                            $.toast({
                                heading: 'Error',
                                text: 'Something went wrong, please try again.',
                                icon: 'success'
                            });
                            $("#edit_" + type + "").removeClass("btn-success");
                            $("#edit_" + type + "").addClass("btn-danger");

                            $("#" + type + "_icon").removeClass("fa fa-spinner fa-spin");
                            $("#" + type + "_icon").addClass("glyphicon-repeat");
                        }
                    }
                });
                return;
            }
        });

            $("#jo_month, #jo_year, #jo_month_range").change(function () {
                var choosen_month = $("#jo_month").val();
                var choosen_year = $("#jo_year").val();
                if (choosen_month <= 9) choosen_month = "0" + choosen_month;
                var choosen_options = $("#jo_month_range").val();

                if (choosen_month != "00" && choosen_year != "0" && choosen_options != "0") {
                    var id = $("#jo_id").val();
                    switch (choosen_options) {
                        case "1":
                            var from = choosen_year + "-" + choosen_month + "-01";
                            var to = choosen_year + "-" + choosen_month + "-15";

                            $("#jo_date_range").val(choosen_month + "/01/" + choosen_year + "-" + choosen_month + "/15/" + choosen_year);
                            getLateAndAbsences(id, from , to);
                            break;
                        case "2":
                            var from = choosen_year + "-" + choosen_month + "-16";
                            var to = choosen_year + "-" + choosen_month + "-" + daysInMonth(parseInt(choosen_month), choosen_year);

                            $("#jo_date_range").val(choosen_month + "/16/" + choosen_year + "-" + choosen_month + "/" + daysInMonth(parseInt(choosen_month), choosen_year) + "/" + choosen_year);
                            getLateAndAbsences(id, from, to);
                            break;
                    }
                }

            });


            $(".remove_create_jo_payroll").click(function () {
                $('#box_create_payroll').addClass("hide");
            });

            $('.remove_payroll_list').click(function () {
                if (!$('#box_jo_payroll_list').hasClass("hide")){
                    $('#box_jo_payroll_list').addClass("hide");
                }
            });

    $("#jo_absent_date").datepicker().change(function () {

        var choosen_date = $("#jo_absent_date").val();

        var array_date = ($("#jo_absent_date_list").val().length === 0) ? [] : $("#jo_absent_date_list").val().split(',');


        var item = parseInt(choosen_date.split('/')[0]) + "/" + parseInt(choosen_date.split('/')[1]) + "/" + parseInt(choosen_date.split('/')[2]);

        var tr_id = $("#jo_date_list").children().length;

        var date_item = "<tr><td>";
        date_item += item;
        date_item += "</td><td><span class = 'glyphicon glyphicon-remove' id='" + tr_id + "' style = 'color:red;cursor:pointer;' onclick='removeDateItem( " + tr_id + " )'></span></td></tr>";

        array_date.push(item);

        $("#jo_date_list").append(date_item);
        $("#jo_absent_date_list").val(array_date);
        $("#jo_absent_date").val("");
        ComputeDeductions();
        ComputeTotalNetPay();
    });

    });



   function loadJoPayrollList(page,empID,firstname,lastname) {

                var url = "@Url.Action("JobOrderPayrollList", "PartialView")";
                $(".parent-payroll-list").html("Loading data ...");
                $.ajax({
                    url: url,
                    type: "POST",
                    data: {
                        page: page,
                        empID:empID,
                        firstname: firstname,
                        lastname: lastname,
                        middlename:""
                    },
                    success: function (html) {
                        $(".parent-payroll-list").html(html);
                    }
                });
            }

    function getLateAndAbsences(id, from, to)
    {
        $("#jo_create_payroll :input").attr("disabled", true);
        $(".create_payroll_spinner").removeClass("hidden");

        var url = "@Url.Action("GetMins","Home")";
        $.ajax({
            url: url,
            type: 'POST',
            data:
                {
                    "id": id,
                    "from":from,
                    "am_in": "08:00:00",
                    "am_out": "12:00:00",
                    "pm_in": "13:00:00",
                    "pm_out": "17:00:00",
                    "to": to
                },
            success: function (data) {
                var array_date = [];
                $("#jo_date_list").empty();
                $("#jo_absent_date_list").val("");

                var minutes_late = data.split(" ")[0];
                var working_days = data.split(" ")[1];
                var no_days_absent = data.split(" ")[2];

                for (var i = 0; i < no_days_absent.split("*").length; i++) {
                    var item = no_days_absent.split("*")[i];
                    if (item !== "") {
                        var date_item = "<tr><td>";
                        date_item += item;
                        date_item += "</td><td><span class = 'glyphicon glyphicon-remove' style = 'color:red;cursor:pointer;' id='" + i + "' onclick='removeDateItem( " + i + " )'></span></td>";

                        array_date.push(item);

                        $("#jo_date_list").append(date_item);
                        $("#jo_absent_date_list").val(array_date);
                        $('#jo_absent_date').val("");
                    }
                }
                $("#jo_minutes_late").val(minutes_late);
                $("#jo_working_days").val(working_days);

                ComputeDeductions();
                ComputeTotalNetPay();

                $(".create_payroll_spinner").addClass("hidden");
                $("#jo_create_payroll :input").attr("disabled", false);

            }
        });
    }


    function clearJoForm() {
        $("#jo_adjustment").val("0.00");
        $("#jo_minutes_late").val("0");
        $("#jo_absent_date_list").val("");
        $("#jo_date_list").empty();
        $("#jo_deduction").val("0.00");
        $("#jo_net_amount").val("0.00");
        $("#jo_ewt").val("0.00");
        $("#jo_prof_tax").val("0.00");
        $("#jo_other_adjustment").val("0.00");
        $("#jo_total_deduction").val("0.00");
        $("#jo_total_amount").val("0.00");
        $("#jo_remarks").val("");

    }

    function ComputeTotalNetPay() {
        var jo_net_amount = $("#jo_net_amount").val().replace(/,/g, '');
        var jo_ewt = $("#jo_ewt").val().replace(/,/g, '');
        var jo_prof_tax = $("#jo_prof_tax").val().replace(/,/g, '');

        var coop = $("#jo_coop").val().replace(/,/g, '');
        var other_adjustment = $("#jo_other_adjustment").val().replace(/,/g, '');
        var pagibig = $("#jo_pagibig").val().replace(/,/g, '');
        var phic = $("#jo_phic").val().replace(/,/g, '');
        var gsis = $("#jo_gsis").val().replace(/,/g, '');
        var excess = $("#jo_excess").val().replace(/,/g, '');

        var total_deductions = roundOff(parseFloat(jo_ewt) + parseFloat(jo_prof_tax) + parseFloat(coop) + parseFloat(pagibig) + parseFloat(phic) + parseFloat(gsis) + parseFloat(excess));
        var total_amount = roundOff((parseFloat(other_adjustment) + parseFloat(jo_net_amount)) - total_deductions);

        $("#jo_total_deductions").val(formatComma(total_deductions));
        $("#jo_total_amount").val(formatComma(total_amount));
    }

    function ComputeDeductions() {

        var salary = $("#jo_salary").val().replace(/,/g, '');
        var working_days = $("#jo_working_days").val().replace(/,/g, '');
        var minutes_late = $("#jo_minutes_late").val().replace(/,/g, '');
        var no_days_absent = ($("#jo_absent_date_list").val().length >= 4) ? $("#jo_absent_date_list").val().split(",").length : 0;
        var adjustment = $("#jo_adjustment").val().replace(/,/g, '');

        var deduction = "0.00";

        deduction = ((+minutes_late + (480 * +no_days_absent)) * (((+salary / +working_days) / 8) / 60));

        if (isNaN(deduction) || !isFinite(deduction)) {
            deduction = "0.00";
        }

        deduction = roundOff(deduction);
        $("#jo_deduction").val(formatComma(deduction));


        var net_amount = 0.00;
        net_amount = ((parseFloat(salary) / 2) + parseFloat(adjustment)) - deduction;
        net_amount = roundOff(net_amount);

        $("#jo_net_amount").val(formatComma(net_amount));
    }

    function removeDateItem(id) {

        var tr = $("#" + id).closest('tr');
        var value = tr.find('td:eq(0)').text();

        tr.remove();

        var array_date = $("#jo_absent_date_list").val().split(',');


        for (var i = array_date.length - 1; i >= 0; i--) {

            if (array_date[i] === value) {
                array_date.splice(i, 1);
                break;
            }
        }

        $("#jo_absent_date_list").val(array_date);

        ComputeDeductions();
        ComputeTotalNetPay();
    }
    function setLoansReadOnly(enable) {

         var array = ["coop", "pagibig", "phic", "gsis", "excess"];
         for (var i = 0; i < array.length; i++) {
              $("#jo_" + array[i] + "").attr("readonly", true);
              $("#jo_" + array[i] + "_payment").attr("readonly", true);
              $("#jo_" + array[i] + "_paid").attr("readonly", true);

              $("#" + array[i] + "_icon").removeClass("glyphicon-check");
              $("#" + array[i] + "_icon").addClass("glyphicon-pencil");
         }
    }
</script>
