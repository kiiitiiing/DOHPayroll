@model PagedList.IPagedList<PayrollSystem.Models.ReportPDF>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
     ViewBag.Title = "Report";
}
<style>
   .td-button {
        float: right;
        margin: 1px;
   }
</style>

<div class="message-container">
     @Html.Partial("Message/_MessagePartial")
</div>

<div class="col-md-3">
     <div class="box box-solid box-primary">
          <div class="box-header with-border">
               <p class="box-title">Job Order</p>
               <div class="box-tools pull-right">
                    <span><i class="glyphicon glyphicon-stats"></i></span>
               </div>
          </div>
          <div class="box-body">
               @Html.Partial("Partial/_JoSummaryPartial")
          </div>
     </div>

     <div class="box box-solid box-primary">
          <div class="box-header with-border">
               <p class="box-title">Regular - Salary Charge</p>
               <div class="box-tools pull-right">
                    <span><i class="glyphicon glyphicon-stats"></i></span>
               </div>
          </div>
          <div class="box-body">
               @Html.Partial("Partial/_SalarySummaryPartial")
          </div>
     </div>

     <div class="box box-solid box-primary">
          <div class="box-header with-border">
               <p class="box-title">Regular - Division</p>
               <div class="box-tools pull-right">
                    <span><i class="glyphicon glyphicon-stats"></i></span>
               </div>
          </div>
          <div class="box-body">
               @Html.Partial("Partial/_DivisionSummaryPartial")
          </div>
     </div>
</div>
<div class="col-md-9">
     <div class="box box-solid box-primary">
          <div class="box-header with-border">
               <p class="box-title">Report List</p>
               <div class="box-tools pull-right">
                    <span><i class="glyphicon glyphicon-file"></i></span>
               </div>
          </div>

          @using (Html.BeginForm("Index", "Report", FormMethod.Get, new { @class = "navbar-form" }))
          {

               <div class="input-group add-on">
                    <input class="form-control" placeholder="Search" name="search" value="@ViewBag.Search" id="srch-term" type="text" />
                    <div class="input-group-btn">
                         <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                    </div>
               </div>
          }
          <div class="box-body">
               <table class="table table-striped">
                    <thead>
                         <tr>
                              <th>From</th>
                              <th>To</th>
                              <th>Document</th>
                              <th>Disbursement</th>
                              <th>Salary Charge</th>
                              <th>Division</th>
                              <th></th>
                         </tr>
                    </thead>
                    <tbody>
                         @foreach (var item in Model)
                         {
                              <tr>
                                   <td width="150">
                                        @Html.DisplayFor(modelItem => item.From)
                                   </td>
                                   <td width="150">
                                        @Html.DisplayFor(modelItem => item.To)
                                   </td>
                                   <td width="150">
                                        @Html.DisplayFor(modelItem => item.Document)
                                   </td>
                                   <td width="150">
                                        @Html.DisplayFor(modelItem => item.Disbursement)
                                   </td>
                                   <td width="300">
                                        @Html.DisplayFor(modelItem => item.SalaryCharge)
                                   </td>
                                   <td width="300">
                                        @Html.DisplayFor(modelItem => item.Division)
                                   </td>
                                   <td width="300">
                                        @using (Html.BeginForm("DeletePDF", "Report", FormMethod.Post))
                                        {
                                             <button type="submit" name="id" value="@item.ID" class="btn btn-xs btn-danger td-button"><i class="glyphicon glyphicon-trash"></i></button>
                                        }
                                        @using (Html.BeginForm("ViewPDF", "Report", FormMethod.Post))
                                        {
                                             <button type="submit" name="pdf" formtarget="_blank" value="@item.FilePath" class="btn btn-xs btn-primary td-button"><i class="glyphicon glyphicon-book"></i></button>
                                        }
                                   </td>
                              </tr>
                         }
                    </tbody>
               </table>
          </div>
          <div class="box-footer">
               Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

               @Html.PagedListPager(Model, page => Url.Action("JobOrder",
 new { page, search = ViewBag.Search }))
          </div>
     </div>
</div>
@section scripts{
     <script>
    $(document).ready(function () {

         $(".regular_salary_date,.regular_division_date").datepicker({
            format: "mm-yyyy",
            viewMode: "months",
            minViewMode: "months"
        });

        $('.summary_date').datepicker({
            multidate: true,
            multidateSeparator: "-",
            autoClose: true,
        }).on("changeDate", function (event) {
            var dates = event.dates, elem = $('.summary_date');
            if (elem.data("selecteddates") == dates.join(",")) return; //To prevernt recursive call, that lead to lead the maximum stack in the browser.
            if (dates.length > 2) dates = dates.splice(dates.length - 1);
            dates.sort(function (a, b) { return new Date(a).getTime() - new Date(b).getTime() });
            elem.data("selecteddates", dates.join(",")).datepicker('setDates', dates);
        });

        $("#jo_summary_form").submit(function (e) {

            var date = $(".summary_date").val();
            if (date.split('-').length == 1) {
                e.preventDefault();
                alert("Please indiciate the inclusive dates");
                return;
            }
        });

        $("#regular_division_form").submit(function (e) {
             var date = $(".regular_division_date").val();
             if (date === "") {
                  e.preventDefault();
                  alert("Please indiciate the inclusive dates");
                  return;
             }
        });

        $("#regular_salary_form").submit(function (e) {
             var date = $(".regular_salary_date").val();
             if (date === "") {
                  e.preventDefault();
                  alert("Please indiciate the inclusive dates");
                  return;
             }
        });


    });

     </script>
}

